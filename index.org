#+SEQ_TODO:       TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:           Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+TITLE:          Linked Data Kit 0.1.2-SNAPSHOT
#+AUTHOR:         Karsten Schmidt
#+EMAIL:          k@thi.ng
#+LANGUAGE:       en
#+OPTIONS:        toc:4 h:4 html-postamble:auto html-preamble:t tex:t
#+HTML_CONTAINER: div
#+HTML_DOCTYPE:   <!DOCTYPE html5>
#+HTML_HEAD:      <link href='http://fonts.googleapis.com/css?family=Droid+Sans:400,700' rel='stylesheet' type='text/css'>
#+HTML_HEAD:      <link rel="stylesheet" type="text/css" href="css/main.css" />
#+LINK_UP:        ../index.html
#+LINK_HOME:      ../index.html

* About the project

** Injected properties                                             :noexport:
#+BEGIN_SRC clojure :exports none :noweb-ref version
0.2.0-SNAPSHOT
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb-ref project-url
http://code.thi.ng/ldk-core
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb-ref gen-source-path
target/classes
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb-ref gen-test-path
target/test-classes
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb yes :noweb-ref cljs-artefact-path
target/ldk-core-<<version>>.js
#+END_SRC

** Description

** License
This project is open source and licensed under the [[http://www.apache.org/licenses/LICENSE-2.0][Apache Software License 2.0]].

** Dependencies
*** Runtime
**** [[https://github.com/clojure/clojure][Clojure]] & [[https://github.com/clojure/clojurescript][ClojureScript]]
#+BEGIN_SRC clojure :noweb-ref dep-clj
[org.clojure/clojure "1.6.0-beta1"]
#+END_SRC
#+BEGIN_SRC clojure :noweb-ref dep-cljs
[org.clojure/clojurescript "0.0-2173"]
#+END_SRC
**** [[https://github.com/clojure/data.csv][clojure.data.csv]]
#+BEGIN_SRC clojure :noweb-ref dep-csv
[org.clojure/data.csv "0.1.2"]
#+END_SRC
**** [[https://github.com/clojure/data.json][clojure.data.json]]
#+BEGIN_SRC clojure :noweb-ref dep-json
[org.clojure/data.json "0.2.2"]
#+END_SRC
**** [[https://github.com/seancorfield/clj-time][clj-time]]
#+BEGIN_SRC clojure :noweb-ref dep-time
[clj-time "0.5.0"]
#+END_SRC
**** [[https://github.com/stuartsierra/dependency][com.stuartsierra/dependency]]
#+BEGIN_SRC clojure :noweb-ref dep-depgraph
[com.stuartsierra/dependency "0.1.0"]
#+END_SRC
**** thi.ng/common
#+BEGIN_SRC clojure :noweb-ref dep-common
[thi.ng/common "0.1.2-SNAPSHOT"]
#+END_SRC
*** Development
**** [[https://github.com/lynaghk/cljx][cljx]]
#+BEGIN_SRC clojure :noweb-ref dep-cljx
[com.keminglabs/cljx "0.3.2"]
#+END_SRC
**** [[https://github.com/emezeske/lein-cljsbuild][lein-cljsbuild]]
#+BEGIN_SRC clojure :noweb-ref dep-cljsbuild
[lein-cljsbuild "1.0.2"]
#+END_SRC
**** [[https://github.com/hugoduncan/criterium][Criterium]]
#+BEGIN_SRC clojure :noweb-ref dep-criterium
[criterium "0.4.1"]
#+END_SRC
**** [[https://github.com/cemerick/austin][Austin]]
#+BEGIN_SRC clojure :noweb-ref dep-austin
[com.cemerick/austin "0.1.4"]
#+END_SRC
**** [[https://github.com/cemerick/clojurescript.test][clojurescript.test]]
#+BEGIN_SRC clojure :noweb-ref dep-cljs-test
[com.cemerick/clojurescript.test "0.2.2"]
#+END_SRC

** Authors
   | [[mailto:k@thi.ng][Karsten Schmidt]] | initiator & principal developer | [[http://thi.ng][thi.ng]]              |
   |                 |                                 | [[http://postspectacular.com][postspectacular.com]] |

** Changelog
   | *Version* | *Released* | *Description*               |
   |-----------+------------+-----------------------------|
   |     0.1.0 | 2013-10-01 | initial development release |

** Leiningen coordinates
#+BEGIN_SRC clojure :noweb yes
  [thi.ng/ldk-core <<version>>]
#+END_SRC

** Leiningen project file                                          :noexport:
#+BEGIN_SRC clojure :tangle babel/project.clj :noweb yes :mkdirp yes :padline no
  (defproject thi.ng/ldk-core "<<version>>"
    :description "Linked Data Kit - a Clojure toolkit for the Semantic Web"
    :url "<<project-url>>"
    :license {:name "Apache Software License"
              :url "http://www.apache.org/licenses/LICENSE-2.0"}
    :dependencies [<<dep-clj>>
                   <<dep-csv>>
                   <<dep-json>>
                   <<dep-time>>
                   <<dep-depgraph>>
                   <<dep-common>>]
  
    :source-paths ["src-clj"]
    :test-paths ["<<gen-test-path>>"]
  
    :profiles {:dev {:dependencies [<<dep-cljs>>
                                    <<dep-criterium>>]
                     :plugins [<<dep-cljx>>
                               <<dep-cljsbuild>>
                               <<dep-cljs-test>>
                               <<dep-austin>>]
                     :aliases {"cleantest" ["do" "clean," "cljx" "once," "test," "cljsbuild" "test"]}}}
  
    :cljx {:builds [{:source-paths ["src/cljx"]
                     :output-path "<<gen-source-path>>"
                     :rules :clj}
                    {:source-paths ["src/cljx"]
                     :output-path "<<gen-source-path>>"
                     :rules :cljs}
                    {:source-paths ["test/cljx"]
                     :output-path "<<gen-test-path>>"
                     :rules :clj}
                    {:source-paths ["test/cljx"]
                     :output-path "<<gen-test-path>>"
                     :rules :cljs}]}
  
    :cljsbuild {:builds [{:source-paths ["<<gen-source-path>>" "<<gen-test-path>>"]
                          :id "simple"
                          :compiler {:output-to "<<cljs-artefact-path>>"
                                     :optimizations :whitespace
                                     :pretty-print true}}]
                :test-commands {"unit-tests" ["phantomjs" :runner "<<cljs-artefact-path>>"]}})
#+END_SRC

** ClojureScript test harness                                      :noexport:
#+BEGIN_SRC html :tangle babel/index.html :noweb yes
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <title>thing-ldk-core test</title>
    </head>
    <body>
      <script type="text/javascript" src="<<cljs-artefact-path>>"></script>
    </body>
  </html>
#+END_SRC
** Accessing library version during runtime

  The autogenerated namespace =thi.ng.ldk.version= contains a single
  symbol =version= holding the version string defined above:

#+BEGIN_SRC clojure :noweb yes
  (use 'thi.ng.ldk.version)
  
  (prn version)
  ; "<<version>>"
#+END_SRC
*** Version namespace                                              :noexport:
#+BEGIN_SRC clojure :tangle babel/src/cljx/thi/ng/ldk/version.cljx :noweb yes :mkdirp yes :padline no
  (ns thi.ng.ldk.version)
  (def ^:const version "<<version>>")
#+END_SRC

* Modules
#+INCLUDE: "core.org" :minlevel 2
#+INCLUDE: "store.org" :minlevel 2
#+INCLUDE: "query.org" :minlevel 2
#+INCLUDE: "inference.org" :minlevel 2
#+INCLUDE: "io.org" :minlevel 2
#+INCLUDE: "common.org" :minlevel 2
